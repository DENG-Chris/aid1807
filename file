pwdLINUX
老师：魏明择


	Day01回顾：
二进制 十进制 八进制 十六进制

终端：
Linux/Unix命令：
ls
pwd
cd
Day02笔记：
	Linux/Unix命令的格式：
命令名 [选项] [参数]
示例：
ls
ls –l
pwd
cd /
cd
	pwd命令：用于显示当前操作的路径（位置目录）
用法： $pwd 
Ls命令：
格式： ls [选项] [目录名或文件名]
常见选项：
  -l 列表显示文件的详细信息
  -a 显示全部文件/目录
示例：
  Ls -l   ls -a   ls -l-a   ls -a-l   ls -al   ls -la
  Ls /etc
	Linux下的路径（目录/文件夹位置）

路径path(是用来记录一个文件或文件夹（目录）的字符串

路径分为两种：
绝对路径：以‘/’字符开头的路径为绝对路径（具有唯一性）
相对路径：不以‘/’字符开头的路径为相对路径
相对路径的开始符号：
文件夹/文件名
 .   当前文件夹（目录）
 ..  上一级文件夹
~  用户主目录
     
用户主目录：操作系统为每个用户创建且由用户所拥有的的目录
~ 代表用户的主目录

	cd 命令：改变当前的工作目录（进入某个目录）
   格式： cd [目录名]
   示例： cd /home/tarena/aid1709
          cd /
           
	mkdir命令：创建一个或多个文件夹（目录）
格式：mkdir 目录名1 目录名2 ……
示例：mkdir a b c d

常用选项：
-p  如果中间的文件夹不存在，则逐级创建所有的文件夹
例：  mkdir –p a/ab/abc/abcd

	rmdir命令：删除一个或多个目录（文件夹内必须没有文件）
格式：rmdir [选项] 文件夹名
示例：rmdir a b c d
常用选项：
-p 如果中间文件也为空，则逐级删除中间的文件夹
示例：mkdir –p a/ab/abc/abcd
      rmdir –p a/ab/abc/abcd

	touch命令：1，文件不存在，则创建一个空文件（大小文0字节的文件）
           2，如果文件或目录存在，则用系统时间更新它的修改时间
格式：touch [文件/文件夹]
示例：touch newfile

	rm命令（rm为remove的缩写）：删除文件或文件夹（目录）
格式：rm [选项] 文件或文件夹
示例：rm newfile

常用选项：
-r 递归删除文件夹内部的文件和文件夹
-i 删除前给出提示（Y代表yes，n代表no）
-f 强制删除，不给出任何提示

	操作带有特殊字符的路径的方法：
用两个双引号（“”）将路径括起来

	命令帮助：！
--help选项：用于显示命令的帮助信息
格式：命令名 --help

	man 命令帮助：查看命令所对应的帮助文档（手册）
格式：man [1-9] Linux/Unix命令名
例如：man ls
      man 1 ls

翻页： 鼠标滚轮
翻页键：J（下），K（上）
退出键：q（退出）

	Tab键：命令/路径补全
	history命令：把以前键入的命令都列出来
格式：history <回车键>

	调用以前执行过的命令：
！编号 执行对应的命令
在终端提示符$下，用上下键翻出历史命令
	通配符：(NOTE:只在终端命令里面有效)
* 代表0个，1个或多个任意字符；
？ 代表1个任意字符
例如：
有文件名如：a ab ac abc aabb bc cd
a* 代表所有以a开头的文件
a*b 代表所有以a开头，以b结尾的文件 如：ab aabb
a？  →ab ac
?c   →ac bc

练习：
1，	创建文件夹cmd；
2，	在cmd文件夹内创建文件：
a ab ac abc aabb bc cd
3，	在cmd文件内创建文件夹：
folder1 folder2
4，	删除cmd文件夹内所有两个字符的文件
删除（ab ac bc cd）
答案参考：
tarena@tedu:~/aid1709$ mkdir cmd
tarena@tedu:~/aid1709$ cd ./cmd
tarena@tedu:~/aid1709/cmd$ pwd
/home/tarena/aid1709/cmd
tarena@tedu:~/aid1709/cmd$ touch a ab ac abc aabb bc cd
tarena@tedu:~/aid1709/cmd$ mkdir folder1 folder2
tarena@tedu:~/aid1709/cmd$ rm -r ??
tarena@tedu:~/aid1709/cmd$ 
	cp 命令：复制（copy）文件或目录
格式：cp 文件或文件夹 目标文件或文件夹
示例：cp /etc/passwd ~/
常用选项：
-a 复制文件夹，连同文件属性一起复制
-r 复制文件夹

	mv命令：文件搬移或更名
格式：mv 文件或文件夹1 文件或文件夹2
示例：mv a b

	clear命令：清屏
格式：clear<回车键>
快捷键：Ctrl+L

练习：
1，	在用户主目录下创建aid1709
2，	在aid1709下创建两个文件夹：Linux pbase
3，	在Linux文件夹下创建三个文件夹：day01 day02 day03
4，	在day02下创建文件：a.txt b.txt
5，	将/etc/passwd复制到day02下

	文件编辑器：
vim,   notepad++,   sublime text
	vim 文件/文本编辑器
	vim启动命令:
vi 
vi 文件名
vim
vim 文件名
	退出vim命令:
:q<回车键>
	Vim两种常用的模式：
        a/i/o/O
命令模式→编辑模式
     ←
     ESC键
	vim常用命令：
：q         退出
：q!        不保存，强制退出
：w        保存
：w 文件名 保存到指定文件（另存……）
：wq       保存并退出
：w!        强制保存
	notepad++文本编辑器
	启动命令：
notepadqq <回车键>
notepadqq 文件名 <回车键>

	Sublime text3 文本编辑器
	启动命令：subl <回车键>
          subl 文件名 <回车键>
打开和隐藏side bar 的快捷键：
Ctrl+k+b
注：只有打开文件夹时才有侧边栏

创建多个光标：Ctrl+鼠标点击    可以创建多个光标
              按ESC键或单击鼠标左键可以取消多个光标
多选相同的选择块: Ctrl+d
移动某一个命令行：ctrl+shift+上/下键
 Ctrl+ C 复制光标所在的行
Ctrl+v  在光标的上一行粘贴复制的行

	文件的权限：
	查看文件的权限：ls –l
	文件的权限类型：
r    读权限
w   写权限
x   执行权限
—	 无权限
	文件权限的分组：
用户权限（USER）
组权限（GROUP）
其他（OTHER）
最高权限：rwxrwxrwx
最低权限：---------
	chmod命令：用来修改文件的权限
格式：chmod 权限 文件名/文件夹名
权限：
u   用户（所有者）
g   同组用户
o   其他用户
+   添加权限
-	 去掉权限
        777 最高权限
        000 最低权限
示例：chmod o-r a.txt #去掉其他用户的读权限

r表示read，读取权限，代表数字4
w表示write，写入权限，代表数字2
x表示execute，执行权限，代表数字1

那723的意思是不是，user具有可读可写可执行权限，group只有写权限，other只有可写可执行权限？
即：十进制数（743 ）对应的二进制数是111  100  011


5，此题目考查的是Linux的权限。
 内部表示权限的第一个1代表r，第二个1代表w，第三个1代表x； 
例如: 111代表rwx：可读可写可执行 
000代表---：不可读不可写不可执行 
110代表rw-：可读可写但不可执行。 因此B是正确的选项。

指令名称 : chmod 
使用权限 : 所有使用者 
使用方式 : chmod [-cfvR] [--help] [--version] mode file... 
说明 : Linux/Unix 的档案调用权限分为三级 : 档案拥有者、群组、其他。利用 chmod 可以藉以控制档案如何被他人所调用。 
参数 : 
mode : 权限设定字串，格式如下 : [ugoa...][[+-=][rwxX]...][,...]，其中 
u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。 
+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。 
r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。 
-c : 若该档案权限确实已经更改，才显示其更改动作 
-f : 若该档案权限无法被更改也不要显示错误讯息 
-v : 显示权限变更的详细资料 
-R : 对目前目录下的所有档案与子目录进行相同的权限变更(即以递回的方式逐个变更) 
--help : 显示辅助说明 
--version : 显示版本

练习操作文件权限：
1，	创建两个文件 a.txt  b.txt写入一些内容
2，	让其他用户不能读取a.txt文件
3，	让用组户和其他用户不能读取b.txt
4，	让用户自身对所有文件有执行权



